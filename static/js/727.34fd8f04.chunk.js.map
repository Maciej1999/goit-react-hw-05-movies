{"version":3,"file":"static/js/727.34fd8f04.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieLink/MovieLink.module.css?9abf","components/MovieList/MovieLink/MovieLink.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/MainPage.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"NavLink\":\"MovieLink_NavLink__02YS-\",\"themeDark\":\"MovieLink_themeDark__HoovL\",\"MovieLink\":\"MovieLink_MovieLink__frDj-\",\"MovieLi\":\"MovieLink_MovieLi__U-dAF\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { useTheme } from 'components/ThemeProvider/ThemeProvider';\nimport css from './MovieLink.module.css';\nexport const MovieLink = ({ to = '', text = '' }) => {\n  const location = useLocation();\n  const { theme } = useTheme();\n  return (\n    <li className={css.MovieLi}>\n      <div className={css.MovieLink}>\n        <NavLink\n          className={`${css.NavLink} ${theme ? '' : css.themeDark}`}\n          to={to}\n          state={{ from: location.pathname }}\n        >\n          {text}{' '}\n        </NavLink>\n      </div>\n    </li>\n  );\n};\nMovieLink.propTypes = {\n  to: PropTypes.string,\n  text: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieList\":\"MovieList_MovieList__92Iqv\"};","import { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport { MovieLink } from './MovieLink/MovieLink';\nimport css from './MovieList.module.css';\nexport const MovieList = ({ list = [], path = '/movies' }) => {\n  return (\n    <ul className={css.MovieList}>\n      {list.map(movie => (\n        <MovieLink\n          text={movie.title || 'Title to be announced later'}\n          to={`${path}/${movie.id}`}\n          key={nanoid()}\n        />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n  path: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { fetchTrending } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nexport const MainPage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const data = await fetchTrending();\n        setTrendingMovies(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, [setError, setIsLoading, setTrendingMovies]);\n  return (\n    <article>\n      {isLoading ? (\n        <Loader />\n      ) : error ? (\n        error\n      ) : (\n        <MovieList list={trendingMovies} />\n      )}\n    </article>\n  );\n};\nexport default MainPage;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '78f2b6656e3343e055b38455360ff324';\n\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n  page: 1,\n  include_adult: false,\n  language: 'en-US',\n});\naxios.defaults.params = params;\nconst axiosIns = axios.create({ baseURL, params });\n\nexport const fetchTrending = async () => {\n  const { data } = await axiosIns.get(`trending/movie/day`);\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axiosIns.get(`search/movie?query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}/credits`);\n  return data;\n};\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}}/reviews`);\n  return data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MovieLink","to","text","location","useLocation","theme","useTheme","className","css","state","from","pathname","MovieList","list","path","map","movie","title","id","nanoid","MainPage","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrending","data","results","params","URLSearchParams","api_key","page","include_adult","language","axios","axiosIns","baseURL","get","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}