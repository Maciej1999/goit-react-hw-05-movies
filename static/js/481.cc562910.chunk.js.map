{"version":3,"file":"static/js/481.cc562910.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieLink/MovieLink.module.css?9abf","components/MovieList/MovieLink/MovieLink.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/Separator/Separator.module.css?d594","components/Separator/Separator.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/SearchMoviesPage.jsx","services/api.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"NavLink\":\"MovieLink_NavLink__02YS-\",\"themeDark\":\"MovieLink_themeDark__HoovL\",\"MovieLink\":\"MovieLink_MovieLink__frDj-\",\"MovieLi\":\"MovieLink_MovieLi__U-dAF\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { useTheme } from 'components/ThemeProvider/ThemeProvider';\nimport css from './MovieLink.module.css';\nexport const MovieLink = ({ to = '', text = '' }) => {\n  const location = useLocation();\n  const { theme } = useTheme();\n  return (\n    <li className={css.MovieLi}>\n      <div className={css.MovieLink}>\n        <NavLink\n          className={`${css.NavLink} ${theme ? '' : css.themeDark}`}\n          to={to}\n          state={{ from: location.pathname }}\n        >\n          {text}{' '}\n        </NavLink>\n      </div>\n    </li>\n  );\n};\nMovieLink.propTypes = {\n  to: PropTypes.string,\n  text: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieList\":\"MovieList_MovieList__92Iqv\"};","import { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport { MovieLink } from './MovieLink/MovieLink';\nimport css from './MovieList.module.css';\nexport const MovieList = ({ list = [], path = '/movies' }) => {\n  return (\n    <ul className={css.MovieList}>\n      {list.map(movie => (\n        <MovieLink\n          text={movie.title || 'Title to be announced later'}\n          to={`${path}/${movie.id}`}\n          key={nanoid()}\n        />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n  path: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"horizontal\":\"Separator_horizontal__DeiXg\",\"vertical\":\"Separator_vertical__Y5adW\",\"absolute\":\"Separator_absolute__o5u+-\",\"margin\":\"Separator_margin__SSK-C\"};","import { PropTypes } from 'prop-types';\nimport css from './Separator.module.css';\nexport const Separator = ({ vertical = false, relative = false }) => {\n  return (\n    <>\n      {vertical || relative ? '' : <div className={css.margin} />}\n      <div\n        className={`${vertical ? css.vertical : css.horizontal} ${\n          relative ? '' : css.absolute\n        }`}\n      />\n    </>\n  );\n};\nSeparator.propTypes = {\n  vertical: PropTypes.bool,\n  relative: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Searchbar_button__nkcjk\",\"label\":\"Searchbar_label__BRcTT\",\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"input\":\"Searchbar_input__19umw\"};","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport css from './Searchbar.module.css';\n\nexport const Searchbar = ({ searchHandle, query }) => {\n  const [input, setInput] = useState(query || '');\n  const inputHandle = e => setInput(e.target.value);\n  const submitHandle = e => {\n    e.preventDefault();\n    searchHandle(input);\n  };\n\n  return (\n    <div className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={submitHandle}>\n        <button type=\"submit\" className={css.button}>\n          <span className={css.label}>üîç</span>\n        </button>\n\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"query\"\n          value={input}\n          onInput={inputHandle}\n          placeholder=\"Search for movies\"\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  query: PropTypes.string,\n  searchHandle: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Separator } from 'components/Separator/Separator';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { fetchMovieByName } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useQuery } from 'components/QueryProvider/QueryProvider';\n\nexport const SearchMoviesPage = () => {\n  const { query, setQuery } = useQuery();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    if (query !== '') {\n      const getSearchedMovies = async () => {\n        try {\n          setError(false);\n          setIsLoading(true);\n          const data = await fetchMovieByName(query);\n          setMovies(data.results);\n        } catch (error) {\n          setError(true);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      getSearchedMovies();\n    } else {\n      setMovies([]);\n      setIsLoading(false);\n    }\n  }, [query]);\n  return (\n    <article>\n      <Searchbar searchHandle={setQuery} query={query} />\n      {isLoading ? <Loader /> : error ? error : <MovieList list={movies} />}\n      <Separator />\n    </article>\n  );\n};\nexport default SearchMoviesPage;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '78f2b6656e3343e055b38455360ff324';\n\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n  page: 1,\n  include_adult: false,\n  language: 'en-US',\n});\naxios.defaults.params = params;\nconst axiosIns = axios.create({ baseURL, params });\n\nexport const fetchTrending = async () => {\n  const { data } = await axiosIns.get(`trending/movie/day`);\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axiosIns.get(`search/movie?query=${query}`);\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}/credits`);\n  return data;\n};\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axiosIns.get(`movie/${movieId}}/reviews`);\n  return data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["MovieLink","to","text","location","useLocation","theme","useTheme","className","css","state","from","pathname","MovieList","list","path","map","movie","title","id","nanoid","Separator","vertical","relative","Searchbar","searchHandle","query","useState","input","setInput","onSubmit","e","preventDefault","type","autoComplete","autoFocus","name","value","onInput","target","placeholder","SearchMoviesPage","useQuery","setQuery","isLoading","setIsLoading","error","setError","movies","setMovies","useEffect","getSearchedMovies","fetchMovieByName","data","results","Loader","params","URLSearchParams","api_key","page","include_adult","language","axios","axiosIns","baseURL","fetchTrending","get","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}